#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <- body_data$results$known_for[[1]]$title
}
get_actor_data()
View(get_actor_data("Jackie Chan"))
#Question 2
?as.data.frame
library("httr")
########
#Accesing the data API
#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <- as.data.frame(body_data$results$known_for)
}
get_actor_data()
View(get_actor_data("Jackie Chan"))
#Question 2
?lapply
library("httr")
########
#Accesing the data API
#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, pull(title))
}
get_actor_data()
View(get_actor_data("Jackie Chan"))
#Question 2
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, pull(title))
}
View(get_actor_data("Jackie Chan"))
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, select(title))
}
View(get_actor_data("Jackie Chan"))
library("httr")
########
#Accesing the data API
#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, select, title)
}
View(get_actor_data("Jackie Chan"))
#Question 2
library("httr")
########
#Accesing the data API
#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, select, title)
}
View(get_actor_data("Jackie Chan"))
#Question 2
x <- get_actor_data("Jackie Chan")
library("httr")
########
#Accesing the data API
#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-body_data$results$known_for
}
x <- get_actor_data("Jackie Chan")
#Question 2
View(x)
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-body_data$results$known_for %>%
select(title, 1:4 )
}
x <- get_actor_data("Jackie Chan")
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-body_data$results$known_for %>%
pull(title, 1:4 )
}
x <- get_actor_data("Jackie Chan")
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-body_data$results$known_for %>%
pull("title", 1:4 )
}
x <- get_actor_data("Jackie Chan")
library("httr")
########
#Accesing the data API
#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-body_data$results$known_for
}
x <- get_actor_data("Jackie Chan")
#Question 2
View(x)
?lapply
library("httr")
########
#Accesing the data API
#############
#Question 1 -- Function 1: Trending Actors
the_base<- "https://api.themoviedb.org/3"
source("apikey.R" )
print(tmdb_key)
#Question 2
key_param <- list(api_key = tmdb_key)
######
#Data analysis
#########
library("dplyr")
library("jsonlite")
#Question 1
get_trending_table <- function(){
resource <- "/trending/person/week"
response <- GET(paste0(the_base, resource), query = key_param)
body <- content(response, "text")
body_data <- fromJSON(body)
trending_df <- body_data$results %>%
filter(known_for_department == "Acting") %>%
mutate(photo = paste0("https://image.tmdb.org/t/p/h100", profile_path)) %>%
select(name, photo) %>%
head(5) %>%
return()
}
View(get_trending_table())
####################
#Specific Actor Data
####################
#Question 1
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, get_titles)
}
get_titles <- function(item_data) {
pull(item_data, title)
}
x <- get_actor_data("Jackie Chan")
#Question 2
View(x)
x <- get_actor_data("Jackie Chan")
View(x)
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, get_titles)
}
get_actor_data <- function(act_name){
resource <- "/search/person"
params_list <- list(api_key = tmdb_key, query = act_name)
response <- GET(paste0(the_base, resource), query = params_list)
body <- content(response, "text")
body_data <- fromJSON(body)
actors_id <- body_data$id
vector_titles <-lapply(body_data$results$known_for, get_titles)
}
get_titles <- function(item_data) {
pull(item_data, title)
}
x <- get_actor_data("Jackie Chan")
nyt_key <-"TieWrcIAGGvYhYaPtXDuBEf5xkppzHTj"
nyt_key <-"TieWrcIAGGvYhYaPtXDuBEf5xkppzHTj"
# load relevant libraries
library("httr")
library("jsonlite")
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
setwd("~/Desktop")
setwd("~/Desktop")
setwd("~/Desktop")
setwd()
setwd("~/Desktop")
setwd("~/Desktop")
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
setwd("~/Desktop/book-exercises/chapter-18-exercises/exercise-1")
# Use `source()` to load your API key variable from the `apikey.R` file you made.
# Make sure you've set your working directory!
source("apikey.R")
query_param <- list("api-key" = nyt_key)
base_url <- "https://api.nytimes.com/svc/movies/v2/"
endpoint <- "reviews/search.json"
uri<- paste0(base_url, endpoint)
query_param <- list("api_key" = nyt_key, "movie_name" = movie_name)
movie_name<- "Parasite"
base_url <- "https://api.nytimes.com/svc/movies/v2/"
endpoint <- "reviews/search.json"
uri<- paste0(base_url, endpoint)
query_param <- list("api_key" = nyt_key, "movie_name" = movie_name)
query_param <- list("api_key" = nyt_key, "movie_name" = movie_name)
GET(uri, query = query_param)
body <- content(response, "text")
data <- fromJSON(body)
base_url <- "https://api.nytimes.com/svc/movies/v2/"
endpoint <- "reviews/search.json"
uri<- paste0(base_url, endpoint)
query_param <- list("api_key" = nyt_key, "movie_name" = movie_name)
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
GET(uri, query = query_param)
body <- content(response, "text")
data <- fromJSON(body)
query_param <- list("api_key" = nyt_key, "movie_name" = movie_name)
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
GET(uri, query = query_param)
response <-GET(uri, query = query_param)
body <- content(response, "text")
data <- fromJSON(body)
response <-GET(uri, query = query_param)
body <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(body)
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
response <-GET(uri, query = query_param)
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
response <-GET(uri, query = query_param)
# Send the HTTP Request to download the data
# Extract the content and convert it from JSON
response <-GET(uri, query = query_param)
data
response <-GET(uri, query = query_param)
body <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(body)
data
library(knitr)
response <-GET(uri, query = query_param)
body <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(body)
data
